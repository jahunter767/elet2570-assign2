$date
  Fri Mar 12 22:51:58 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module pkg_1bit $end
$upscope $end
$scope module pkg_8bit $end
$upscope $end
$scope module pkg_alu $end
$upscope $end
$scope module test8bitsub $end
$var reg 8 ! a[7:0] $end
$var reg 8 " b[7:0] $end
$var reg 8 # y[7:0] $end
$var reg 8 $ flags[7:0] $end
$var reg 3 % code[2:0] $end
$var reg 1 & clk $end
$scope module sub0 $end
$var reg 8 ' a[7:0] $end
$var reg 8 ( b[7:0] $end
$var reg 8 ) y[7:0] $end
$var reg 1 * carry $end
$var reg 9 + c[8:0] $end
$var reg 8 , bbar[7:0] $end
$scope module not8b0 $end
$var reg 8 - a[7:0] $end
$var reg 8 . y[7:0] $end
$scope module gen0(0) $end
$upscope $end
$scope module gen0(1) $end
$upscope $end
$scope module gen0(2) $end
$upscope $end
$scope module gen0(3) $end
$upscope $end
$scope module gen0(4) $end
$upscope $end
$scope module gen0(5) $end
$upscope $end
$scope module gen0(6) $end
$upscope $end
$scope module gen0(7) $end
$upscope $end
$upscope $end
$scope module gen0(0) $end
$scope module fa $end
$var reg 1 / a $end
$var reg 1 0 b $end
$var reg 1 1 c $end
$var reg 1 2 sum $end
$var reg 1 3 carry $end
$var reg 1 4 s0 $end
$var reg 1 5 c0 $end
$var reg 1 6 c1 $end
$scope module eor0 $end
$var reg 1 7 a $end
$var reg 1 8 b $end
$var reg 1 9 y $end
$upscope $end
$scope module eor1 $end
$var reg 1 : a $end
$var reg 1 ; b $end
$var reg 1 < y $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen0(1) $end
$scope module fa $end
$var reg 1 = a $end
$var reg 1 > b $end
$var reg 1 ? c $end
$var reg 1 @ sum $end
$var reg 1 A carry $end
$var reg 1 B s0 $end
$var reg 1 C c0 $end
$var reg 1 D c1 $end
$scope module eor0 $end
$var reg 1 E a $end
$var reg 1 F b $end
$var reg 1 G y $end
$upscope $end
$scope module eor1 $end
$var reg 1 H a $end
$var reg 1 I b $end
$var reg 1 J y $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen0(2) $end
$scope module fa $end
$var reg 1 K a $end
$var reg 1 L b $end
$var reg 1 M c $end
$var reg 1 N sum $end
$var reg 1 O carry $end
$var reg 1 P s0 $end
$var reg 1 Q c0 $end
$var reg 1 R c1 $end
$scope module eor0 $end
$var reg 1 S a $end
$var reg 1 T b $end
$var reg 1 U y $end
$upscope $end
$scope module eor1 $end
$var reg 1 V a $end
$var reg 1 W b $end
$var reg 1 X y $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen0(3) $end
$scope module fa $end
$var reg 1 Y a $end
$var reg 1 Z b $end
$var reg 1 [ c $end
$var reg 1 \ sum $end
$var reg 1 ] carry $end
$var reg 1 ^ s0 $end
$var reg 1 _ c0 $end
$var reg 1 ` c1 $end
$scope module eor0 $end
$var reg 1 a a $end
$var reg 1 b b $end
$var reg 1 c y $end
$upscope $end
$scope module eor1 $end
$var reg 1 d a $end
$var reg 1 e b $end
$var reg 1 f y $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen0(4) $end
$scope module fa $end
$var reg 1 g a $end
$var reg 1 h b $end
$var reg 1 i c $end
$var reg 1 j sum $end
$var reg 1 k carry $end
$var reg 1 l s0 $end
$var reg 1 m c0 $end
$var reg 1 n c1 $end
$scope module eor0 $end
$var reg 1 o a $end
$var reg 1 p b $end
$var reg 1 q y $end
$upscope $end
$scope module eor1 $end
$var reg 1 r a $end
$var reg 1 s b $end
$var reg 1 t y $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen0(5) $end
$scope module fa $end
$var reg 1 u a $end
$var reg 1 v b $end
$var reg 1 w c $end
$var reg 1 x sum $end
$var reg 1 y carry $end
$var reg 1 z s0 $end
$var reg 1 { c0 $end
$var reg 1 | c1 $end
$scope module eor0 $end
$var reg 1 } a $end
$var reg 1 !" b $end
$var reg 1 "" y $end
$upscope $end
$scope module eor1 $end
$var reg 1 #" a $end
$var reg 1 $" b $end
$var reg 1 %" y $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen0(6) $end
$scope module fa $end
$var reg 1 &" a $end
$var reg 1 '" b $end
$var reg 1 (" c $end
$var reg 1 )" sum $end
$var reg 1 *" carry $end
$var reg 1 +" s0 $end
$var reg 1 ," c0 $end
$var reg 1 -" c1 $end
$scope module eor0 $end
$var reg 1 ." a $end
$var reg 1 /" b $end
$var reg 1 0" y $end
$upscope $end
$scope module eor1 $end
$var reg 1 1" a $end
$var reg 1 2" b $end
$var reg 1 3" y $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen0(7) $end
$scope module fa $end
$var reg 1 4" a $end
$var reg 1 5" b $end
$var reg 1 6" c $end
$var reg 1 7" sum $end
$var reg 1 8" carry $end
$var reg 1 9" s0 $end
$var reg 1 :" c0 $end
$var reg 1 ;" c1 $end
$scope module eor0 $end
$var reg 1 <" a $end
$var reg 1 =" b $end
$var reg 1 >" y $end
$upscope $end
$scope module eor1 $end
$var reg 1 ?" a $end
$var reg 1 @" b $end
$var reg 1 A" y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000000 !
b00000001 "
b00000001 #
b00000000 $
bUUU %
0&
b00000000 '
b00000001 (
b00000001 )
0*
b111111111 +
b11111110 ,
b00000001 -
b11111110 .
0/
00
11
12
13
04
U5
U6
07
08
09
0:
1;
1<
0=
1>
1?
0@
1A
1B
UC
UD
0E
1F
1G
1H
1I
0J
0K
1L
1M
0N
1O
1P
UQ
UR
0S
1T
1U
1V
1W
0X
0Y
1Z
1[
0\
1]
1^
U_
U`
0a
1b
1c
1d
1e
0f
0g
1h
1i
0j
1k
1l
Um
Un
0o
1p
1q
1r
1s
0t
0u
1v
1w
0x
1y
1z
U{
U|
0}
1!"
1""
1#"
1$"
0%"
0&"
1'"
1("
0)"
1*"
1+"
U,"
U-"
0."
1/"
10"
11"
12"
03"
04"
15"
16"
07"
18"
19"
U:"
U;"
0<"
1="
1>"
1?"
1@"
0A"
#1000000
b00000001 !
b11111110 #
b00000100 $
1&
b00000001 '
b11111110 )
1*
b000000001 +
1/
02
03
14
17
19
1:
0<
0?
1@
0A
0I
1J
0M
1N
0O
0W
1X
0[
1\
0]
0e
1f
0i
1j
0k
0s
1t
0w
1x
0y
0$"
1%"
0("
1)"
0*"
02"
13"
06"
17"
08"
0@"
1A"
#2000000
0&
#3000000
b10000001 !
b10000001 "
b11111110 #
b00000100 $
1&
b10000001 '
b10000001 (
b11111110 )
1*
b000000001 +
b01111110 ,
b10000001 -
b01111110 .
14"
05"
17"
08"
19"
1<"
0="
1>"
1?"
1A"
#4000000
0&
#5000000
b01000001 !
b01000001 "
b11111110 #
1&
b01000001 '
b01000001 (
b11111110 )
b000000001 +
b10111110 ,
b01000001 -
b10111110 .
1&"
0'"
1)"
0*"
1+"
1."
0/"
10"
11"
13"
04"
15"
06"
19"
0<"
1="
1>"
1?"
0@"
#6000000
0&

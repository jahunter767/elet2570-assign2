$date
  Fri Mar 12 22:51:10 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module pkg_1bit $end
$upscope $end
$scope module pkg_8bit $end
$upscope $end
$scope module pkg_alu $end
$upscope $end
$scope module test8bitadd $end
$var reg 8 ! a[7:0] $end
$var reg 8 " b[7:0] $end
$var reg 8 # y[7:0] $end
$var reg 8 $ flags[7:0] $end
$var reg 3 % code[2:0] $end
$var reg 1 & clk $end
$scope module add0 $end
$var reg 8 ' a[7:0] $end
$var reg 8 ( b[7:0] $end
$var reg 8 ) y[7:0] $end
$var reg 1 * carry $end
$var reg 8 + c[7:0] $end
$scope module gen0(0) $end
$scope module fa $end
$var reg 1 , a $end
$var reg 1 - b $end
$var reg 1 . c $end
$var reg 1 / sum $end
$var reg 1 0 carry $end
$var reg 1 1 s0 $end
$var reg 1 2 c0 $end
$var reg 1 3 c1 $end
$scope module eor0 $end
$var reg 1 4 a $end
$var reg 1 5 b $end
$var reg 1 6 y $end
$upscope $end
$scope module eor1 $end
$var reg 1 7 a $end
$var reg 1 8 b $end
$var reg 1 9 y $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen0(1) $end
$scope module fa $end
$var reg 1 : a $end
$var reg 1 ; b $end
$var reg 1 < c $end
$var reg 1 = sum $end
$var reg 1 > carry $end
$var reg 1 ? s0 $end
$var reg 1 @ c0 $end
$var reg 1 A c1 $end
$scope module eor0 $end
$var reg 1 B a $end
$var reg 1 C b $end
$var reg 1 D y $end
$upscope $end
$scope module eor1 $end
$var reg 1 E a $end
$var reg 1 F b $end
$var reg 1 G y $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen0(2) $end
$scope module fa $end
$var reg 1 H a $end
$var reg 1 I b $end
$var reg 1 J c $end
$var reg 1 K sum $end
$var reg 1 L carry $end
$var reg 1 M s0 $end
$var reg 1 N c0 $end
$var reg 1 O c1 $end
$scope module eor0 $end
$var reg 1 P a $end
$var reg 1 Q b $end
$var reg 1 R y $end
$upscope $end
$scope module eor1 $end
$var reg 1 S a $end
$var reg 1 T b $end
$var reg 1 U y $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen0(3) $end
$scope module fa $end
$var reg 1 V a $end
$var reg 1 W b $end
$var reg 1 X c $end
$var reg 1 Y sum $end
$var reg 1 Z carry $end
$var reg 1 [ s0 $end
$var reg 1 \ c0 $end
$var reg 1 ] c1 $end
$scope module eor0 $end
$var reg 1 ^ a $end
$var reg 1 _ b $end
$var reg 1 ` y $end
$upscope $end
$scope module eor1 $end
$var reg 1 a a $end
$var reg 1 b b $end
$var reg 1 c y $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen0(4) $end
$scope module fa $end
$var reg 1 d a $end
$var reg 1 e b $end
$var reg 1 f c $end
$var reg 1 g sum $end
$var reg 1 h carry $end
$var reg 1 i s0 $end
$var reg 1 j c0 $end
$var reg 1 k c1 $end
$scope module eor0 $end
$var reg 1 l a $end
$var reg 1 m b $end
$var reg 1 n y $end
$upscope $end
$scope module eor1 $end
$var reg 1 o a $end
$var reg 1 p b $end
$var reg 1 q y $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen0(5) $end
$scope module fa $end
$var reg 1 r a $end
$var reg 1 s b $end
$var reg 1 t c $end
$var reg 1 u sum $end
$var reg 1 v carry $end
$var reg 1 w s0 $end
$var reg 1 x c0 $end
$var reg 1 y c1 $end
$scope module eor0 $end
$var reg 1 z a $end
$var reg 1 { b $end
$var reg 1 | y $end
$upscope $end
$scope module eor1 $end
$var reg 1 } a $end
$var reg 1 !" b $end
$var reg 1 "" y $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen0(6) $end
$scope module fa $end
$var reg 1 #" a $end
$var reg 1 $" b $end
$var reg 1 %" c $end
$var reg 1 &" sum $end
$var reg 1 '" carry $end
$var reg 1 (" s0 $end
$var reg 1 )" c0 $end
$var reg 1 *" c1 $end
$scope module eor0 $end
$var reg 1 +" a $end
$var reg 1 ," b $end
$var reg 1 -" y $end
$upscope $end
$scope module eor1 $end
$var reg 1 ." a $end
$var reg 1 /" b $end
$var reg 1 0" y $end
$upscope $end
$upscope $end
$upscope $end
$scope module fa7 $end
$var reg 1 1" a $end
$var reg 1 2" b $end
$var reg 1 3" c $end
$var reg 1 4" sum $end
$var reg 1 5" carry $end
$var reg 1 6" s0 $end
$var reg 1 7" c0 $end
$var reg 1 8" c1 $end
$scope module eor0 $end
$var reg 1 9" a $end
$var reg 1 :" b $end
$var reg 1 ;" y $end
$upscope $end
$scope module eor1 $end
$var reg 1 <" a $end
$var reg 1 =" b $end
$var reg 1 >" y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000000 !
b00000001 "
b00000001 #
b00000000 $
bUUU %
0&
b00000000 '
b00000001 (
b00000001 )
0*
b00000000 +
0,
1-
0.
1/
00
11
U2
U3
04
15
16
17
08
19
0:
0;
0<
0=
0>
0?
U@
UA
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
UN
UO
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
U\
U]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
Uj
Uk
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
Ux
Uy
0z
0{
0|
0}
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
U)"
U*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
U7"
U8"
09"
0:"
0;"
0<"
0="
0>"
#1000000
b00000001 !
b00000010 #
1&
b00000001 '
b00000010 )
b00000010 +
1,
0/
10
01
14
06
07
09
1<
1=
1F
1G
#2000000
0&
#3000000
b10000001 !
b10000001 "
b00000100 $
1&
b10000001 '
b10000001 (
1*
11"
12"
15"
19"
1:"
#4000000
0&
#5000000
b01000001 !
b01000001 "
b10000010 #
b00000000 $
1&
b01000001 '
b01000001 (
b10000010 )
0*
b10000010 +
1#"
1$"
1'"
1+"
1,"
01"
02"
13"
14"
05"
09"
0:"
1="
1>"
#6000000
0&
